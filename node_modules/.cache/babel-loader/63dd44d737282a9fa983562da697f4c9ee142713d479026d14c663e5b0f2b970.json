{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antonio\\\\Desktop\\\\CAD\\\\Coursework\\\\group_cwk\\\\comp3207-giftly\\\\src\\\\frontend\\\\pages\\\\home\\\\components\\\\WishList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WishList({\n  username\n}) {\n  _s();\n  const [responseMessage, setResponseMessage] = useState('');\n\n  // Function to handle fetching the wishlist\n  const fetchWishlist = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/wishlist_get', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username\n        })\n      });\n      const data = await response.json();\n      setResponseMessage(`Wishlist fetched: ${JSON.stringify(data)}`);\n    } catch (error) {\n      setResponseMessage(`Error fetching wishlist: ${error.message}`);\n    }\n  };\n\n  // Function to handle updating the wishlist\n  const updateWishlist = async () => {\n    // NOTE: this is where the selected gift will. It will require the following information in identical structure\n    const gift = {\n      'name': \"Basketball\",\n      'data': {\n        \"supplier\": \"link2\",\n        \"cost\": 30,\n        \"added_on\": \"21-12-2024\"\n      }\n    };\n    try {\n      const response = await fetch('http://localhost:5000/wishlist_update', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"username\": username,\n          \"gift\": gift\n        })\n      });\n      const data = await response.json();\n      setResponseMessage(`Wishlist updated: ${JSON.stringify(data)}`);\n    } catch (error) {\n      setResponseMessage(`Error updating wishlist: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Wishlist for \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchWishlist,\n      children: \"Fetch Wishlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: updateWishlist,\n      children: \"Update Wishlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), responseMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: responseMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(WishList, \"cDwFNTD6UCuXlfGsLAmnTNPF8gQ=\");\n_c = WishList;\nexport default WishList;\nvar _c;\n$RefreshReg$(_c, \"WishList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","WishList","username","_s","responseMessage","setResponseMessage","fetchWishlist","response","fetch","method","headers","body","JSON","stringify","data","json","error","message","updateWishlist","gift","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Antonio/Desktop/CAD/Coursework/group_cwk/comp3207-giftly/src/frontend/pages/home/components/WishList.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction WishList({ username }) {\r\n  const [responseMessage, setResponseMessage] = useState('');\r\n\r\n  // Function to handle fetching the wishlist\r\n  const fetchWishlist = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/wishlist_get', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ username }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      setResponseMessage(`Wishlist fetched: ${JSON.stringify(data)}`);\r\n    } catch (error) {\r\n      setResponseMessage(`Error fetching wishlist: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  // Function to handle updating the wishlist\r\n  const updateWishlist = async () => {\r\n    // NOTE: this is where the selected gift will. It will require the following information in identical structure\r\n    const gift = {\r\n        'name':\"Basketball\",\r\n        'data': {\r\n            \"supplier\": \"link2\",\r\n            \"cost\": 30,\r\n            \"added_on\": \"21-12-2024\"\r\n            }\r\n    }\r\n    try {\r\n      const response = await fetch('http://localhost:5000/wishlist_update', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\"username\": username, \"gift\": gift}),\r\n      });\r\n\r\n      const data = await response.json();\r\n      setResponseMessage(`Wishlist updated: ${JSON.stringify(data)}`);\r\n    } catch (error) {\r\n      setResponseMessage(`Error updating wishlist: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Wishlist for {username}</h1>\r\n      <button onClick={fetchWishlist}>Fetch Wishlist</button>\r\n      <button onClick={updateWishlist}>Update Wishlist</button>\r\n      {responseMessage && <p>{responseMessage}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WishList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC9B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAE1D;EACA,MAAMQ,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;QACjEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEX;QAAS,CAAC;MACnC,CAAC,CAAC;MAEF,MAAMY,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCV,kBAAkB,CAAC,qBAAqBO,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,EAAE,CAAC;IACjE,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdX,kBAAkB,CAAC,4BAA4BW,KAAK,CAACC,OAAO,EAAE,CAAC;IACjE;EACF,CAAC;;EAED;EACA,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC;IACA,MAAMC,IAAI,GAAG;MACT,MAAM,EAAC,YAAY;MACnB,MAAM,EAAE;QACJ,UAAU,EAAE,OAAO;QACnB,MAAM,EAAE,EAAE;QACV,UAAU,EAAE;MACZ;IACR,CAAC;IACD,IAAI;MACF,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;QACpEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAC,UAAU,EAAEX,QAAQ;UAAE,MAAM,EAAEiB;QAAI,CAAC;MAC3D,CAAC,CAAC;MAEF,MAAML,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCV,kBAAkB,CAAC,qBAAqBO,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,EAAE,CAAC;IACjE,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdX,kBAAkB,CAAC,4BAA4BW,KAAK,CAACC,OAAO,EAAE,CAAC;IACjE;EACF,CAAC;EAED,oBACEjB,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,GAAI,eAAa,EAAClB,QAAQ;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChCxB,OAAA;MAAQyB,OAAO,EAAEnB,aAAc;MAAAc,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvDxB,OAAA;MAAQyB,OAAO,EAAEP,cAAe;MAAAE,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACxDpB,eAAe,iBAAIJ,OAAA;MAAAoB,QAAA,EAAIhB;IAAe;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV;AAACrB,EAAA,CAxDQF,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AA0DjB,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}