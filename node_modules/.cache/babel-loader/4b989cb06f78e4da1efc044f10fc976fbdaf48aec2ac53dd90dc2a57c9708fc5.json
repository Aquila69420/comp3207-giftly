{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antonio\\\\Desktop\\\\CAD\\\\Coursework\\\\group_cwk\\\\gifto\\\\src\\\\frontend\\\\pages\\\\home\\\\components\\\\ImageInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageInput() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleUpload = async () => {\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append('image', selectedFile);\n      try {\n        const response = await fetch('http://localhost:5000/product_img', {\n          method: 'POST',\n          body: formData\n        });\n        const result = await response.json();\n        console.log('Response from backend:', result);\n      } catch (error) {\n        console.error('Error uploading image:', error);\n      }\n    } else {\n      alert('Please select an image to upload.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: e => setSelectedFile(e.target.files[0]),\n      style: {\n        marginBottom: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      style: {\n        padding: '10px 20px',\n        fontSize: '16px',\n        cursor: 'pointer',\n        borderRadius: '5px',\n        backgroundColor: '#2196F3',\n        color: 'white',\n        border: 'none'\n      },\n      children: \"Upload Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageInput, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = ImageInput;\nexport default ImageInput;\nvar _c;\n$RefreshReg$(_c, \"ImageInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ImageInput","_s","selectedFile","setSelectedFile","handleUpload","formData","FormData","append","response","fetch","method","body","result","json","console","log","error","alert","children","type","accept","onChange","e","target","files","style","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","onClick","padding","fontSize","cursor","borderRadius","backgroundColor","color","border","_c","$RefreshReg$"],"sources":["C:/Users/Antonio/Desktop/CAD/Coursework/group_cwk/gifto/src/frontend/pages/home/components/ImageInput.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction ImageInput() {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  const handleUpload = async () => {\r\n    if (selectedFile) {\r\n        const formData = new FormData();\r\n        formData.append('image', selectedFile);\r\n    \r\n        try {\r\n          const response = await fetch('http://localhost:5000/product_img', {\r\n            method: 'POST',\r\n            body: formData,\r\n          });\r\n    \r\n          const result = await response.json();\r\n          console.log('Response from backend:', result);\r\n        } catch (error) {\r\n          console.error('Error uploading image:', error);\r\n        }\r\n    } else {\r\n      alert('Please select an image to upload.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={(e) => setSelectedFile(e.target.files[0])}\r\n        style={{ marginBottom: '10px' }}\r\n      />\r\n      <button\r\n        onClick={handleUpload}\r\n        style={{\r\n          padding: '10px 20px',\r\n          fontSize: '16px',\r\n          cursor: 'pointer',\r\n          borderRadius: '5px',\r\n          backgroundColor: '#2196F3',\r\n          color: 'white',\r\n          border: 'none',\r\n        }}\r\n      >\r\n        Upload Image\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageInput;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMO,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAIF,YAAY,EAAE;MACd,MAAMG,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEL,YAAY,CAAC;MAEtC,IAAI;QACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;UAChEC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEN;QACR,CAAC,CAAC;QAEF,MAAMO,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QACpCC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEH,MAAM,CAAC;MAC/C,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACJ,CAAC,MAAM;MACLC,KAAK,CAAC,mCAAmC,CAAC;IAC5C;EACF,CAAC;EAED,oBACElB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MACEoB,IAAI,EAAC,MAAM;MACXC,MAAM,EAAC,SAAS;MAChBC,QAAQ,EAAGC,CAAC,IAAKnB,eAAe,CAACmB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAE;MACpDC,KAAK,EAAE;QAAEC,YAAY,EAAE;MAAO;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACF/B,OAAA;MACEgC,OAAO,EAAE3B,YAAa;MACtBqB,KAAK,EAAE;QACLO,OAAO,EAAE,WAAW;QACpBC,QAAQ,EAAE,MAAM;QAChBC,MAAM,EAAE,SAAS;QACjBC,YAAY,EAAE,KAAK;QACnBC,eAAe,EAAE,SAAS;QAC1BC,KAAK,EAAE,OAAO;QACdC,MAAM,EAAE;MACV,CAAE;MAAApB,QAAA,EACH;IAED;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAC7B,EAAA,CAhDQD,UAAU;AAAAuC,EAAA,GAAVvC,UAAU;AAkDnB,eAAeA,UAAU;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}