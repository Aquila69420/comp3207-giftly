{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antonio\\\\Desktop\\\\CAD\\\\Coursework\\\\group_cwk\\\\gifto\\\\src\\\\frontend\\\\pages\\\\home\\\\components\\\\ImageInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageInput({\n  username\n}) {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      alert('Please select an image to upload.');\n      return;\n    }\n\n    // File Type Validation\n    const allowedTypes = ['image/png', 'image/jpg', 'image/jpeg', 'image/gif', 'image/bmp', 'image/webp', 'image/ico', 'image/tiff'];\n    if (!allowedTypes.includes(selectedFile.type)) {\n      alert('File type not allowed. Allowed types: PNG, JPG, JPEG, GIF, BMP, WEBP, ICO, TIFF.');\n      return;\n    }\n\n    // File Size Validation (< 20MB)\n    const maxSizeMB = 20;\n    if (selectedFile.size > maxSizeMB * 1024 * 1024) {\n      alert(`File is too large. Maximum allowed size is ${maxSizeMB} MB.`);\n      return;\n    }\n\n    // Image Dimensions Validation\n    const img = new Image();\n    img.src = URL.createObjectURL(selectedFile);\n    img.onload = async () => {\n      const {\n        width,\n        height\n      } = img;\n      if (width < 50 || height < 50 || width > 16000 || height > 16000) {\n        alert('Image dimensions must be between 50x50 and 16000x16000 pixels.');\n        return;\n      }\n\n      // File Passed Validation - Proceed with Upload\n      const formData = new FormData();\n      formData.append('image', selectedFile);\n      try {\n        const response = await fetch('http://localhost:5000/product_img', {\n          method: 'POST',\n          body: {\n            \"username\": username,\n            \"img_data\": formData\n          }\n        });\n        const result = await response.json();\n        console.log('Response from backend:', result);\n      } catch (error) {\n        console.error('Error uploading image:', error);\n      }\n    };\n    img.onerror = () => {\n      alert('Invalid image file. Please upload a valid image.');\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: e => setSelectedFile(e.target.files[0]),\n      style: {\n        marginBottom: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      style: {\n        padding: '10px 20px',\n        fontSize: '16px',\n        cursor: 'pointer',\n        borderRadius: '5px',\n        backgroundColor: '#2196F3',\n        color: 'white',\n        border: 'none'\n      },\n      children: \"Upload Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageInput, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = ImageInput;\nexport default ImageInput;\nvar _c;\n$RefreshReg$(_c, \"ImageInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ImageInput","username","_s","selectedFile","setSelectedFile","handleUpload","alert","allowedTypes","includes","type","maxSizeMB","size","img","Image","src","URL","createObjectURL","onload","width","height","formData","FormData","append","response","fetch","method","body","result","json","console","log","error","onerror","children","accept","onChange","e","target","files","style","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","onClick","padding","fontSize","cursor","borderRadius","backgroundColor","color","border","_c","$RefreshReg$"],"sources":["C:/Users/Antonio/Desktop/CAD/Coursework/group_cwk/gifto/src/frontend/pages/home/components/ImageInput.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction ImageInput({username}) {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile) {\r\n      alert('Please select an image to upload.');\r\n      return;\r\n    }\r\n  \r\n    // File Type Validation\r\n    const allowedTypes = ['image/png', 'image/jpg', 'image/jpeg', 'image/gif', 'image/bmp', 'image/webp', 'image/ico', 'image/tiff'];\r\n    if (!allowedTypes.includes(selectedFile.type)) {\r\n      alert('File type not allowed. Allowed types: PNG, JPG, JPEG, GIF, BMP, WEBP, ICO, TIFF.');\r\n      return;\r\n    }\r\n  \r\n    // File Size Validation (< 20MB)\r\n    const maxSizeMB = 20;\r\n    if (selectedFile.size > maxSizeMB * 1024 * 1024) {\r\n      alert(`File is too large. Maximum allowed size is ${maxSizeMB} MB.`);\r\n      return;\r\n    }\r\n  \r\n    // Image Dimensions Validation\r\n    const img = new Image();\r\n    img.src = URL.createObjectURL(selectedFile);\r\n    img.onload = async () => {\r\n      const { width, height } = img;\r\n  \r\n      if (width < 50 || height < 50 || width > 16000 || height > 16000) {\r\n        alert('Image dimensions must be between 50x50 and 16000x16000 pixels.');\r\n        return;\r\n      }\r\n  \r\n      // File Passed Validation - Proceed with Upload\r\n      const formData = new FormData();\r\n      formData.append('image', selectedFile);\r\n  \r\n      try {\r\n        const response = await fetch('http://localhost:5000/product_img', {\r\n          method: 'POST',\r\n          body: {\r\n            \"username\": username,\r\n            \"img_data\":formData\r\n          }\r\n        });\r\n  \r\n        const result = await response.json();\r\n        console.log('Response from backend:', result);\r\n      } catch (error) {\r\n        console.error('Error uploading image:', error);\r\n      }\r\n    };\r\n  \r\n    img.onerror = () => {\r\n      alert('Invalid image file. Please upload a valid image.');\r\n    };\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={(e) => setSelectedFile(e.target.files[0])}\r\n        style={{ marginBottom: '10px' }}\r\n      />\r\n      <button\r\n        onClick={handleUpload}\r\n        style={{\r\n          padding: '10px 20px',\r\n          fontSize: '16px',\r\n          cursor: 'pointer',\r\n          borderRadius: '5px',\r\n          backgroundColor: '#2196F3',\r\n          color: 'white',\r\n          border: 'none',\r\n        }}\r\n      >\r\n        Upload Image\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageInput;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,UAAUA,CAAC;EAACC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC9B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMQ,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACF,YAAY,EAAE;MACjBG,KAAK,CAAC,mCAAmC,CAAC;MAC1C;IACF;;IAEA;IACA,MAAMC,YAAY,GAAG,CAAC,WAAW,EAAE,WAAW,EAAE,YAAY,EAAE,WAAW,EAAE,WAAW,EAAE,YAAY,EAAE,WAAW,EAAE,YAAY,CAAC;IAChI,IAAI,CAACA,YAAY,CAACC,QAAQ,CAACL,YAAY,CAACM,IAAI,CAAC,EAAE;MAC7CH,KAAK,CAAC,kFAAkF,CAAC;MACzF;IACF;;IAEA;IACA,MAAMI,SAAS,GAAG,EAAE;IACpB,IAAIP,YAAY,CAACQ,IAAI,GAAGD,SAAS,GAAG,IAAI,GAAG,IAAI,EAAE;MAC/CJ,KAAK,CAAC,8CAA8CI,SAAS,MAAM,CAAC;MACpE;IACF;;IAEA;IACA,MAAME,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;IACvBD,GAAG,CAACE,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACb,YAAY,CAAC;IAC3CS,GAAG,CAACK,MAAM,GAAG,YAAY;MACvB,MAAM;QAAEC,KAAK;QAAEC;MAAO,CAAC,GAAGP,GAAG;MAE7B,IAAIM,KAAK,GAAG,EAAE,IAAIC,MAAM,GAAG,EAAE,IAAID,KAAK,GAAG,KAAK,IAAIC,MAAM,GAAG,KAAK,EAAE;QAChEb,KAAK,CAAC,gEAAgE,CAAC;QACvE;MACF;;MAEA;MACA,MAAMc,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEnB,YAAY,CAAC;MAEtC,IAAI;QACF,MAAMoB,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;UAChEC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAE;YACJ,UAAU,EAAEzB,QAAQ;YACpB,UAAU,EAACmB;UACb;QACF,CAAC,CAAC;QAEF,MAAMO,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QACpCC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEH,MAAM,CAAC;MAC/C,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDnB,GAAG,CAACoB,OAAO,GAAG,MAAM;MAClB1B,KAAK,CAAC,kDAAkD,CAAC;IAC3D,CAAC;EACH,CAAC;EAGD,oBACEP,OAAA;IAAAkC,QAAA,gBACElC,OAAA;MACEU,IAAI,EAAC,MAAM;MACXyB,MAAM,EAAC,SAAS;MAChBC,QAAQ,EAAGC,CAAC,IAAKhC,eAAe,CAACgC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAE;MACpDC,KAAK,EAAE;QAAEC,YAAY,EAAE;MAAO;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACF7C,OAAA;MACE8C,OAAO,EAAExC,YAAa;MACtBkC,KAAK,EAAE;QACLO,OAAO,EAAE,WAAW;QACpBC,QAAQ,EAAE,MAAM;QAChBC,MAAM,EAAE,SAAS;QACjBC,YAAY,EAAE,KAAK;QACnBC,eAAe,EAAE,SAAS;QAC1BC,KAAK,EAAE,OAAO;QACdC,MAAM,EAAE;MACV,CAAE;MAAAnB,QAAA,EACH;IAED;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAC1C,EAAA,CApFQF,UAAU;AAAAqD,EAAA,GAAVrD,UAAU;AAsFnB,eAAeA,UAAU;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}